name: Test commit

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    # Every day at 1 AM
    - cron: '0 1 * * *'
    # Every wednesday at 1 AM
    - cron: '0 1 * * 3'

jobs:

  # Test on all supported Python versions and platforms
  python_platform:

    name: ${{ matrix.python }} (${{ matrix.os }})
    if: github.event_name != 'schedule' || github.event.schedule == '0 1 * * 3'
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.optional || false }}

    strategy:
        matrix:
            os: ['ubuntu-latest']
            python: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
            include:

              - os: windows-latest
                python: '3.x'

              - os: macos-latest
                python: '3.x'

              - python: '3.12-dev'
                os: ubuntu-latest
                optional: true

    steps:
      - name: Check out code.
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}.
        uses: actions/setup-python@v4
        with:
            python-version: ${{ matrix.python }}

      - name: Install package.
        run:  pip install .[dev]

      - name: Run tests.
        run:  pytest

  # Test against Flake8 main
  flake8_main:

    name: Flake8 main
    if: github.event_name != 'schedule' || github.event.schedule == '0 1 * * *'
    runs-on: ubuntu-latest

    # Uncomment to prevent failure from blocking
    # continue-on-error: True

    steps:
      - name: Check out code.
        uses: actions/checkout@v3

      - name: Set up latest stable Python.
        uses: actions/setup-python@v4
        with:
            python-version: "3.x"

      - name: Install flake8 main
        run:  pip install git+https://github.com/PyCQA/flake8.git

      - name: Install package.
        run:  pip install .[dev]

      - name: Run tests.
        run:  pytest
